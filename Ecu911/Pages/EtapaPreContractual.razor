@page "/etapaprecontractual"
@page "/etapaprecontractual/{id}"
<PageTitle>Etapa Pre-Contractual</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h3" >EtapaPreContractual</MudText>
<EditForm Model="@registro" >

<MudGrid Style="padding:50px">

    <MudItem xs="12" sm="4" md="4">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Formato Fecha" @bind-Date="registro.fechaAdjudicacion" HelperText="Fecha de adjudicación del cotrato u orden de compra" DateFormat="yyyy-MM-dd"></MudDatePicker>
    </MudItem>

    <MudItem xs="10" sm="4" md="4">
            <MudNumericField Immediate="false" HideSpinButtons="true" Label="Valor adjudicadao(con IVA)" Format="N2" T="Decimal" @bind-Value="registro.valorAdjudicado" HelperText="registro.valorAdjudicado"  />
    </MudItem>

    <MudItem xs="8" sm="4" md="4">
        <MudTextField @bind-Value="registro.administradorContrato" Label="Administrador del cotrato" Variant="Variant.Text"></MudTextField>
    </MudItem>

</MudGrid>
</EditForm>
<MudContainer Class="d-flex flex-column justify-center" Style="width: 300px;padding:30px">
    <MudButton  OnClick="Subir" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Error" Size="Size.Large">
            <MudText> Guardar</MudText>      
    </MudButton>
</MudContainer>


@code {
    Precontractual registro = new();

    [Parameter]
    public string id { get; set; }




    protected async void Subir()
    {
        Precontractual procesos = new();

        HttpResponseMessage? response = new();

        try
        {
            registro.IdPreparatoria = id;
            response = await apiService.HttpClient.PostAsJsonAsync("Precontractual", registro);
        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }
        try
        {
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadFromJsonAsync<CreatedResponse>();
            snackBar.Add("Proceso agregado!", Severity.Success);

        }
        catch (HttpRequestException)
        {

            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }


    }

}


