@page "/etapapreparatoria"
@page "/etapapreparatoria/{id}"

@attribute [Authorize(Roles = "SUPERADMINISTRADOR,SUPERVISOR")]

<PageTitle>Etapa Preparatoria</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h3">Etapa Preparatoria</MudText>
<MudPaper Class="pa-16 ma-2" Elevation="3">
<EditForm Model="@registro">
    <MudGrid Style="padding:50px">

        <MudItem xs="12" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Elaboración de informe de necesidad" @bind-Date="registro.informeNecesidad" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

        <MudItem xs="12" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Elaboración de términos de refenrecia/especificaciones técnicas" @bind-Date="registro.terminosReferencia" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

        <MudItem xs="10" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Solicitud de la publicidad" @bind-Date="registro.solicitudPublicacion" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

        <MudItem xs="10" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Publicación de la necesidad-portal de compras públicas" @bind-Date="registro.publicacionNecesidad" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

        <MudItem xs="8" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Recepción de cotizaciones" @bind-Date="registro.recepcionCotizaciones" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

        <MudItem xs="8" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Elaboración de estudio de mercado" @bind-Date="registro.elaboracionEstudioMercado" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>
       
        <MudItem xs="6" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Solicitud de certificación PAPP" @bind-Date="registro.solicitudPAPP" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

        <MudItem xs="6" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Emision de certificación PAPP" @bind-Date="registro.emisionPAPP" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

        <MudItem xs="4" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Solicitud de certificación presupuestaria" @bind-Date="registro.solicitudPresup" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>
        <MudItem xs="4" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Emisión de certificación presupuestaria" @bind-Date="registro.emisionPresup" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>
            <MudItem xs="4" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Solicitud certificación PAC" @bind-Date="registro.solicitudPAC" DateFormat="yyyy-MM-dd"></MudDatePicker>
    </MudItem>
        <MudItem xs="4" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Emisión certificación PAC" @bind-Date="registro.emisionPAC" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>
        <MudItem xs="4" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Solicitud de inicio de proceso al coordinador zonal" @bind-Date="registro.solicitudCoordinadorZonal" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>
        
  <MudItem xs="4" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Resolución de inicio" @bind-Date="registro.resolucionInicio" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>
  <MudItem xs="4" sm="6" md="6">
            <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Publicación del proceso" @bind-Date="registro.publicacionProceso" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudItem>

    </MudGrid>
</EditForm>

<MudContainer Class="d-flex flex-column justify-center" Style="width: 300px;padding:30px">
    <MudButton OnClick="Subir" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Error" Size="Size.Large">

        <MudText> Guardar</MudText>

    </MudButton>
</MudContainer>

</MudPaper>

<MudContainer Class="d-flex flex-column justify-center" Style="width: 300px;padding:30px">
    <MudButton OnClick="NavigateEstados" ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Error" Size="Size.Large">
        <MudText> Regresar</MudText>
    </MudButton>
</MudContainer>

<MudPaper Class="pa-16 ma-2" Elevation="0">
    <MudItem xs="12">
        <MudText Typo="Typo.h6" Class="d-flex flex-column align-center" Style="width: 100%; height:100%;">© 1822-2023</MudText>
        <MudText Typo="Typo.h6" Class="d-flex flex-column align-center" Style="width: 100%; height:100%;">ecu911.gob.ec</MudText>
    </MudItem>
</MudPaper>
@code {

    private Preparatoria registro = new();
    public double? _valueEn = 0000.00;
    private Preparatoria procesos = new();
    private HttpResponseMessage? response = new();

    [Parameter]
    public string id { get; set; }

    protected async void Subir()
    {
        try
        {

            registro.IdProcesoCompra = id;
            response = await apiService.HttpClient.PostAsJsonAsync("Preparatoria", registro);
       
        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }
        try
        {
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadFromJsonAsync<CreatedResponse>();
            snackBar.Add("Etapa  actualizada!!", Severity.Success);

        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }


    }
    void NavigateEstados()
    {
        navManager.NavigateTo($"EstadosProcesoRevision/{id}");
    }

}
