@page "/Reportes"

@*@attribute [Authorize(Roles = "SUPERADMINISTRADOR")]

@attribute [Authorize(Roles = "Iron Man")]
<h3>Reportes</h3>


<AuthorizeView Roles="SUPERADMINISTRADOR, ">
    <Authorized>
        <h3>Hola sebas sssss<b>@context.User.Identity.Name</b></h3>
    </Authorized>
    <NotAuthorized>
        <h3>no auto </h3>
    </NotAuthorized>
</AuthorizeView>



<AuthorizeView Roles="Iron Man">
    <Authorized>
        <h3>Hola sebas<b>@context.User.Identity.Name</b></h3>
    </Authorized>
    <NotAuthorized>
        <h3>no auto </h3>
    </NotAuthorized>
</AuthorizeView>
*@


<div>
    <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
</div>
<MudText Typo="Typo.h6">Selected portion of the chart: @Index</MudText>


<MudChart ChartType="ChartType.Donut" Width="300px" Height="300px" InputData="@data" InputLabels="@labels">
    <CustomGraphics>
        <text class="donut-inner-text" x="47%" y="35%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">Total</text>
        <text class="donut-inner-text" x="47%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="5">@data.Sum().ToString()</text>
    </CustomGraphics>
</MudChart>



<div>
    <MudChart ChartType="ChartType.Line" ChartSeries="@Series2" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels2" Width="100%" Height="350px"></MudChart>
    <MudButton @onclick="RandomizeData">Randomize Data</MudButton>
    <MudText Typo="Typo.h6">Selected portion of the chart: @Index2</MudText>
</div>
@code {
    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "United States", Data = new double[] { 40, 20, 25, 27, 46, 60, 48, 80, 15 } },
        new ChartSeries() { Name = "Germany", Data = new double[] { 19, 24, 35, 13, 28, 15, 13, 16, 31 } },
        new ChartSeries() { Name = "Sweden", Data = new double[] { 8, 6, 11, 13, 4, 16, 10, 16, 18 } },
    };
    public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };



    public double[] data = { 25, 77, 28, 5 };
    public string[] labels = { "Oil", "Coal", "Gas", "Biomass" };


    private int Index2 = -1; //default value cannot be 0 -> first selectedindex is 0.

    public List<ChartSeries> Series2 = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Series 1", Data = new double[] { 90, 79, 72, 69, 62, 62, 55, 65, 70 } },
        new ChartSeries() { Name = "Series 2", Data = new double[] { 10, 41, 35, 51, 49, 62, 69, 91, 148 } },
    };
    public string[] XAxisLabels2 = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };

    Random random = new Random();
    public void RandomizeData()
    {
        var new_series = new List<ChartSeries>()
        {
            new ChartSeries() { Name = "Series 1", Data = new double[9] },
            new ChartSeries() { Name = "Series 2", Data = new double[9] },
        };
        for (int i = 0; i < 9; i++)
        {
            new_series[0].Data[i] = random.NextDouble() * 100;
            new_series[1].Data[i] = random.NextDouble() * 100;
        }
        Series = new_series;
        StateHasChanged();
    }
}
