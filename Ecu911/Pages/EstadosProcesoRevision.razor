@page "/EstadosProcesoRevision/{Id}"

@if (preparatoria.informeNecesidad != null)
    {
<MudCardContent Class="d-flex  flex-column  align-center  ">
  
        <MudText Typo="Typo.h3" GutterBottom="true">Etapa Preparatoria</MudText>
        <MudItem xs="12" sm="12" md="12" Class="d-flex  flex-column  align-center">
            <MudGrid>
                <MudSimpleTable Hover="true" Dense="true" FixedHeader="@fixedheader" Style="@(fixedheader?"height:30%;":"")">
                    <thead>
                        <tr>
                            <th>Elaboración de informe de necesidad </th>
                            <th>Elaboración de términos de refenrecia/especificaciones técnicas </th>
                            <th>Solicitud de la publicidad </th>
                            <th>Publicación de la necesidad-portal de compras públicas </th>

                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@preparatoria.informeNecesidad</td>
                            <td>@preparatoria.terminosReferencia</td>
                            <td>@preparatoria.solicitudPublicacion</td>
                            <td>@preparatoria.publicacionNecesidad</td>
                        </tr>
                    </tbody>
                </MudSimpleTable>

            </MudGrid>
        </MudItem>  
</MudCardContent>

  <MudCardContent Class="d-flex  flex-column  align-center  ">
            <MudText Class="mb-12"> </MudText>
            <MudItem xs="12" sm="12" md="12" Class="d-flex  flex-column  align-center">
                <MudGrid>
                    <MudSimpleTable>
                        <thead>
                            <tr>
                            <th>Recepción de cotizaciones </th>
                            <th>Elaboración de estudio de mercado </th>
                            <th>Solicitud de certificación PAPP </th>
                            <th>Emision de certificación PAPP </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                            <td>@preparatoria.recepcionCotizaciones</td>
                            <td>@preparatoria.elaboracionEstudioMercado</td>
                            <td>@preparatoria.solicitudPAPP</td>
                            <td>@preparatoria.emisionPAPP</td>
                            </tr>
                        </tbody>
                    </MudSimpleTable>
                </MudGrid>
            </MudItem>
 </MudCardContent>

    <MudCardContent Class="d-flex  flex-column  align-center  ">
        <MudText Class="mb-12"> </MudText>
        <MudItem xs="12" sm="12" md="12" Class="d-flex  flex-column  align-center">
            <MudGrid>
                <MudSimpleTable>
                    <thead>
                        <tr>
                            <th>Solicitud de certificación presupuestaria </th>
                            <th>Emisión de certificación presupuestaria</th>
                            <th>Solicitud certificación PAC </th>
                            <th>Emisión certificación PAC </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@preparatoria.solicitudPresup</td>
                            <td>@preparatoria.emisionPresup</td>
                            <td>@preparatoria.solicitudPAC</td>
                            <td>@preparatoria.emisionPAC</td>
                        </tr>
                    </tbody>
                </MudSimpleTable>
            </MudGrid>
        </MudItem>
    </MudCardContent>

  <MudCardContent Class="d-flex  flex-column  align-center  ">
        <MudText Class="mb-12"> </MudText>
        <MudItem xs="12" sm="12" md="12" Class="d-flex  flex-column  align-center">
            <MudGrid>
                <MudSimpleTable>
                    <thead>
                        <tr>
                            <th>Solicitud de inicio de proceso al coordinador zonal</th>
                            <th>Resolución de inicio</th>
                            <th>Publicación del proceso </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@preparatoria.solicitudCoordinadorZonal</td>
                            <td>@preparatoria.resolucionInicio</td>
                            <td>@preparatoria.publicacionProceso</td>
                        </tr>
                    </tbody>
                </MudSimpleTable>
            </MudGrid>
        </MudItem>
    </MudCardContent>


    @if (precontracualObj.IdPrecontractual != null)
    {

        <MudCardContent Class="d-flex  flex-column  align-center  ">

            <MudText Class="mb-12"> </MudText>
            <MudText Typo="Typo.h3" GutterBottom="true">Etapa Precontractual</MudText>
            <MudItem xs="12" sm="12" md="12" Class="d-flex  flex-column  align-center">
                <MudGrid>
                    <MudSimpleTable>
                        <thead>
                            <tr>
                                <th>Preguntas/Respuestas y aclaraciónes</th>
                                <th>Recepción de ofertas</th>
                                <th>Calificación de ofertas y convalidación de errores </th>
                                <th>Puja/Negociación</th>
                                <th>Adjudicación(estimada)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@precontracualObj.preguntasRespuestas</td>
                                <td>@precontracualObj.recepcionOfertas</td>
                                <td>@precontracualObj.calificacionOfertas</td>
                                <td>@precontracualObj.pujaNegociacion</td>
                                <td>@precontracualObj.adjudicacion</td>

                            </tr>
                        </tbody>
                    </MudSimpleTable>
                </MudGrid>
            </MudItem>
        </MudCardContent>

        @if (contractualObj.IdPrecontractual != null)
        {
            
<MudCardContent Class="d-flex  flex-column  align-center  ">


        <MudText Typo="Typo.h3" GutterBottom="true">Etapa Contractual</MudText>
    <MudItem xs="12" sm="12" md="12" Class="d-flex  flex-column  align-center">
        <MudGrid>
            <MudSimpleTable>
                <thead>
                    <tr>
                                    <th>Suscripción de Contrato</th>
                                    <th>Finalización del Contrato</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                                    <td>@contractualObj.fechaSuscripcion</td>
                                    <td>@contractualObj.fechaFinalizacion</td> 
                    </tr>
                </tbody>
            </MudSimpleTable>
        </MudGrid>
    </MudItem>
   
</MudCardContent> 

        }
        else
        {
           
            <MudCardContent Class="d-flex  flex-column  align-center  ">
                <th><MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Error" OnClick="@(e => NavigateContractual(@preparatoria.PreparatoriaId))">etapa Contractual</MudButton></th>
            </MudCardContent>
        }


    }
    else
    {
        <MudCardContent Class="d-flex  flex-column  align-center  ">
            <th><MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Error" OnClick="@(e => NavigatePrecontractual(@preparatoria.PreparatoriaId))">etapa Precontractual</MudButton></th>
        </MudCardContent>
    }


}
else
{
    <MudCardContent Class="d-flex  flex-column  align-center  ">
        <th><MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Error" OnClick="@(e => NavigatePreparatoria(@Id))">etapa Preparatoria</MudButton></th>
    </MudCardContent>
}


<MudContainer Class="d-flex flex-column justify-center" Style="width: 300px;padding:30px">
    <MudButton OnClick="NavigateInicio" ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Error" Size="Size.Large">
        <MudText> Regresar</MudText>
    </MudButton>
</MudContainer>


@code{

    bool fixedheader = true;
    
    ProcesoCompra proceso = new ProcesoCompra();

    List<Preparatoria> preparatorias = new();
    Preparatoria preparatoria = new();

    List<Precontractual> precontracual = new();
    Precontractual precontracualObj = new();

    List<Contractual> contractual = new();
    Contractual contractualObj = new();

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await apiService.HttpClient.GetAsync($"ProcesoCompra/id?id={Id}");
        try
        {
            response.EnsureSuccessStatusCode();
            proceso = await response.Content.ReadFromJsonAsync<ProcesoCompra>();
            await buscarPreparatoria();
        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", severity: Severity.Error);
        }
    }

    private async Task buscarPreparatoria()
    {

        var response = await apiService.HttpClient.GetAsync($"Preparatoria");

        try
        {
            response.EnsureSuccessStatusCode();
            preparatorias = await response.Content.ReadFromJsonAsync<List<Preparatoria>>();

            foreach (var item in preparatorias)
            {
                if (item.IdProcesoCompra == Id)
                {
                    preparatoria = item;

                    response = await apiService.HttpClient.GetAsync($"Precontractual");
                    try
                    {
                        response.EnsureSuccessStatusCode();
                        precontracual = await response.Content.ReadFromJsonAsync<List<Precontractual>>();
                        foreach (var item2 in precontracual)
                        {
                            if (item2.IdPreparatoria == preparatoria.PreparatoriaId)
                            {
                                precontracualObj = item2;
                                response = await apiService.HttpClient.GetAsync($"Contractual");
                                try
                                {
                                    response.EnsureSuccessStatusCode();
                                    contractual = await response.Content.ReadFromJsonAsync<List<Contractual>>();
                                    foreach (var item3 in contractual)
                                    {
                                        if (item3.IdPrecontractual == precontracualObj.IdPreparatoria)
                                        {
                                            contractualObj = item3;
                                            break;
                                        }
                                    }

                                }
                                catch (HttpRequestException)
                                {
                                    var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
                                    snackBar.Add($"{data.Message}", severity: Severity.Error);
                                }

                            }
                        }
                    }
                    catch (HttpRequestException)
                    {
                        var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
                        snackBar.Add($"{data.Message}", severity: Severity.Error);
                    }
                    
                }
            }
        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", severity: Severity.Error);
        }
    }



    void NavigateInicio()
    {
        navManager.NavigateTo($"/");
    }



       void NavigatePreparatoria(string id)
    {
        navManager.NavigateTo($"etapapreparatoria/{id}");
    }
    void NavigatePrecontractual(string id)
    {
        navManager.NavigateTo($"etapaprecontractual/{id}");
    }
    void NavigateContractual(string id)
    {
        navManager.NavigateTo($"etapacontractual/{id}");
    }
}