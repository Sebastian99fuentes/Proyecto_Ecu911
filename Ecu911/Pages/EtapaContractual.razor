@page "/etapacontractual"
@page "/etapacontractual/{id}"



<PageTitle>Etapa Contractual</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h3">Etapa Contractual</MudText>
<MudPaper Class="pa-16 ma-2" Elevation="3">

<EditForm Model="@registro" >

    <MudContainer Class="d-flex flex-column justify-center" Style="width: 40%;padding:30px">
        <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Suscripción de Contrato" @bind-Date="registro.fechaSuscripcion" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudContainer>


    <MudContainer Class="d-flex flex-column justify-center" Style="width: 40%;padding:30px">
        <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Finalización del Contrato" @bind-Date="registro.fechaFinalizacion" DateFormat="yyyy-MM-dd"></MudDatePicker>
    </MudContainer>
       
</EditForm>
<MudContainer Class="d-flex flex-column justify-center" Style="width: 300px;padding:30px">
    <MudButton  OnClick="Subir" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Error" Size="Size.Large">

            <MudText> Guardar</MudText>
        
        </MudButton>
</MudContainer>
</MudPaper>

<MudContainer Class="d-flex flex-column justify-center" Style="width: 300px;padding:30px">
    <MudButton OnClick="NavigateEstados" ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Error" Size="Size.Large">
        <MudText> Regresar</MudText>
    </MudButton>
</MudContainer>

<MudPaper Class="pa-16 ma-2" Elevation="0">
    <MudItem xs="12">
        <MudText Typo="Typo.h6" Class="d-flex flex-column align-center" Style="width: 100%; height:100%;">© 1822-2023</MudText>
        <MudText Typo="Typo.h6" Class="d-flex flex-column align-center" Style="width: 100%; height:100%;">ecu911.gob.ec</MudText>
    </MudItem>
</MudPaper>
@code {
    private ProcesoCompra updateproceso = new();
    private Contractual registro = new();
    private bool _procesando = false;
    [Parameter]
    public string id { get; set; }

    //[Parameter]
    //public string Id { get; set; }
    protected async void Subir()
    {
        HttpResponseMessage? response = new();

        try
        {

            registro.IdPrecontractual = id;
            response = await apiService.HttpClient.PostAsJsonAsync("Contractual", registro);
        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }
        try
        {
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadFromJsonAsync<CreatedResponse>();
            snackBar.Add("Etapa  actualizada!", Severity.Success);

        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }

    }
    protected async void NavigateEstados()
    {

        var IDd = await sessionStorage.GetItemAsync<string>("Id-prepatoria");

        navManager.NavigateTo($"EstadosProcesoRevision/{IDd}");
    }
}
