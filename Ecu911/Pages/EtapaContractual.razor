@page "/etapacontractual"
@page "/etapacontractual/{Id}"
<PageTitle>Etapa Contractual</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h3">Etapa Contractual</MudText>
<EditForm Model="@registro" >

    <MudContainer Class="d-flex flex-column justify-center" Style="width: 40%;padding:30px">
        <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Suscripción de Contrato" @bind-Date="registro.fechaSuscripcion" DateFormat="yyyy-MM-dd"></MudDatePicker>
        </MudContainer>
    <MudContainer Class="d-flex flex-column justify-center" Style="width: 40%;padding:30px">
        <MudSelect T="string" Label="Etapa(Actualizar deacuerdo a la fase que se encuetra)">
            <MudSelectItem Value="@("Sin TDRS o Especificaciones Técnicas")" />
            <MudSelectItem Value="@("Etapa Preparatoria")" />
            <MudSelectItem Value="@("Etapa Precontractual")" />
            <MudSelectItem Value="@("Etapa Contractual")" />
            <MudSelectItem Value="@("Etapa Finalizado")" />
            <MudSelectItem Value="@("Etapa Cancelado")" />
        </MudSelect>


    </MudContainer>
           
</EditForm>
<MudContainer Class="d-flex flex-column justify-center" Style="width: 300px;padding:30px">
    <MudButton  OnClick="Subir" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Error" Size="Size.Large">

            <MudText> Guardar</MudText>
        
        </MudButton>
</MudContainer>


@code {

    Contractual registro = new();
    private bool _procesando = false;
    [Parameter]
    public string Id { get; set; }

    protected async void Subir()
    {
        HttpResponseMessage? response = new();

        try
        {

            registro.IdPrecontractual = Id;
            response = await apiService.HttpClient.PostAsJsonAsync("Contractual", registro);
        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }
        try
        {
            response.EnsureSuccessStatusCode();
            var data = await response.Content.ReadFromJsonAsync<CreatedResponse>();
            snackBar.Add("Proceso agregado!", Severity.Success);

        }
        catch (HttpRequestException)
        {
            var data = await response.Content.ReadFromJsonAsync<ResponseModel>();
            snackBar.Add($"{data.Message}", Severity.Error);
        }

    }
    
}
