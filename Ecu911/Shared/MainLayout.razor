@inherits LayoutComponentBase


<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="0" Color="Color.Dark">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                <MudMenu Color="Color.Inherit" Icon="@Icons.Material.Rounded.Person">
                    <MudMenuItem>
                        <MudNavLink Href="ChangePassword" Match="NavLinkMatch.Prefix" Icon="@Icons.Rounded.Password">CambiarContraseña</MudNavLink>
                    </MudMenuItem> 
                </MudMenu>
                <MudText>Usuario:@context.User.Identity.Name</MudText>
                <MudSpacer />
                <MudButton Variant="Variant.Text" StartIcon="@Icons.Filled.Logout" Color="Color.Error" OnClick="@RegistroLogs" Target="_blank">Salir</MudButton>
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">Ecu911</MudText>
                </MudDrawerHeader>
                <NavMenu />
            </MudDrawer>
            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <Ecu911.Pages.Login/>
    </NotAuthorized>
</AuthorizeView>
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />



@code {
    bool _drawerOpen = true;
    private Logs loguser = new Logs();
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

   
    private async Task RegistroLogs()
    {

        HttpResponseMessage? response = new();

        loguser.userName = await sessionStorage.GetItemAsync<string>("Id");
        loguser.action = "Salida programa";
        //logs
        try
        {
            response = await apiService.HttpClient.PostAsJsonAsync("Logs", loguser);
        }
        catch (HttpRequestException)
        {
            var data2 = await response.Content.ReadFromJsonAsync<ResponseModel>();
            Console.WriteLine($"{data2.Message}", Severity.Error);
        }
        LogOut();
    }
    public void LogOut()
    {

        ((CustomAuthenticationStateProvider)authProvider).SetUserAsAuLoggedOut();

    }
}